<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (C) 2012-2016 Thales Services SAS.

    This file is part of AuthZForce CE.

    AuthZForce CE is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    AuthZForce CE is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with AuthZForce CE.  If not, see <http://www.gnu.org/licenses/>.

-->
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jaxrs="http://cxf.apache.org/jaxrs" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
						http://cxf.apache.org/jaxrs http://cxf.apache.org/schemas/jaxrs.xsd
						http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
						http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd">

<!-- Default values of JNDI variables are used for (unit) testing only. For deployment as webapp to a Java server (servlet container), you should set default values (env-entry-value element) with environment entries in the web deployment descriptor (web.xml). -->
	<jee:jndi-lookup id="jndi_configDir" jndi-name="org.ow2.authzforce.config.dir" expected-type="java.lang.String" default-value="classpath:server/conf" />
	<!-- File: prefix matters. If not present, the path is loaded as classpath resource by Spring -->
	<jee:jndi-lookup id="jndi_dataDir" jndi-name="org.ow2.authzforce.data.dir" expected-type="java.lang.String" default-value="file:target/server.data" />
	<!-- If no "real" Ethernet address to use (host disconnected from the network), use random multicast address. -->
	<jee:jndi-lookup id="jndi_useRandomAddressBasedUUID" jndi-name="org.ow2.authzforce.uuid.gen.randomMulticastAddressBased" expected-type="java.lang.Boolean" default-value="#{T(java.lang.Boolean).TRUE}" />
	<!-- -1 or any negative value means no max (unlimited) -->
	<jee:jndi-lookup id="jndi_maxNumOfPoliciesPerDomain" jndi-name="org.ow2.authzforce.domain.maxPolicyCount" expected-type="java.lang.Integer" default-value="#{new Integer(-1)}" />
	<jee:jndi-lookup id="jndi_maxNumOfVersionsPerPolicy" jndi-name="org.ow2.authzforce.domain.policy.maxVersionCount" expected-type="java.lang.Integer" default-value="#{new Integer(-1)}" />
	<!-- 0 means no sync -->
	<jee:jndi-lookup id="jndi_syncIntervalSec" jndi-name="org.ow2.authzforce.domains.sync.interval" expected-type="java.lang.Integer" default-value="#{new Integer(0)}" />

	<util:list id="apiSchemaLocations">
		<value>#{jndi_configDir}/authzforce-ext.xsd</value>
		<value>classpath:/xsd/authz-rest-api.xsd</value>
	</util:list>

	<bean id="apiSchemaHandler" class="org.apache.cxf.jaxrs.utils.schemas.SchemaHandler">
		<!-- <property name="catalogLocation" value="classpath:META-INF/jax-rs-catalog.xml" /> -->
		<property name="catalogLocation" value="#{jndi_configDir}/catalog.xml" />
		<property name="schemaLocations" ref="apiSchemaLocations" />
	</bean>

	<bean id="jaxbProvider" class="org.apache.cxf.jaxrs.provider.JAXBElementProvider">
		<property name="singleJaxbContext" value="true" />
		<property name="extraClass" value="#{ T(org.ow2.authzforce.core.pdp.impl.PdpExtensionLoader).getExtensionJaxbClasses().toArray() }" />
		<property name="schemaHandler" ref="apiSchemaHandler" />
	</bean>

	<bean id="pdpModelHandler" class="org.ow2.authzforce.core.pdp.impl.PdpModelHandler">
		<constructor-arg name="catalogLocation" value="#{jndi_configDir}/catalog.xml" />
		<!-- <constructor-arg name="extensionXsdLocation" value="classpath:/authzforce-ext.xsd" /> -->
		<constructor-arg name="extensionXsdLocation" value="#{jndi_configDir}/authzforce-ext.xsd" />
	</bean>

	<bean id="domainDAOClientFactoryBean" class="org.ow2.authzforce.rest.service.jaxrs.DomainResourceImpl$Factory" />

	<bean id="domainsDAOBean" class="org.ow2.authzforce.pap.dao.file.FileBasedDomainsDAO" destroy-method="stopDomainsSync">
		<!-- root directory of domain folders; a domain folder contains all configuration data of a specific domain, and is named after the domain ID encoded with base64url. -->
		<constructor-arg name="domainsRoot" value="#{jndi_dataDir}/domains" />
		<!-- domain template directory for domain creation -->
		<constructor-arg name="domainTmpl" value="#{jndi_configDir}/domain.tmpl" />
		<!-- domains directory-to-memory synchronization interval in seconds -->
		<constructor-arg name="domainsSyncIntervalSec" value="#{jndi_syncIntervalSec}" />
		<constructor-arg name="pdpModelHandler" ref="pdpModelHandler" />
		<constructor-arg name="useRandomAddressBasedUUID" value="#{jndi_useRandomAddressBasedUUID}" />
		<constructor-arg name="maxNumOfPoliciesPerDomain" value="#{jndi_maxNumOfPoliciesPerDomain}" />
		<constructor-arg name="maxNumOfVersionsPerPolicy" value="#{jndi_maxNumOfVersionsPerPolicy}" />
		<constructor-arg name="domainDAOClientFactory" ref="domainDAOClientFactoryBean" />
	</bean>

	<bean id="domainsResourceBean" class="org.ow2.authzforce.rest.service.jaxrs.DomainsResourceImpl">
		<constructor-arg name="domainsDAO" ref="domainsDAOBean" />
		<constructor-arg name="authorizedResourceAttribute" value="authorizedResource" />
		<constructor-arg name="anyResourceId">
			<null />
		</constructor-arg>
	</bean>
</beans>
